-- CLIENTE
DROP TABLE IF EXISTS Cliente CASCADE;

CREATE TABLE Cliente (
    id_cliente INT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    senha VARCHAR(100) NOT NULL,
    cpf CHAR(11) UNIQUE NOT NULL
);

-- LOJA AFILIADA
DROP TABLE IF EXISTS LojaAfiliada CASCADE;

CREATE TABLE LojaAfiliada (
    id_loja INT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    link VARCHAR(255)
);

-- PECAS
DROP TABLE IF EXISTS Pecas CASCADE;

CREATE TABLE Pecas (
    id_peca INT PRIMARY KEY ,
    nome_peca VARCHAR(100) NOT NULL,
    categoria VARCHAR(50) NOT NULL,
    marca VARCHAR(50),
    preco DECIMAL(10, 2) NOT NULL
);

-- ESPECIFICACAO
DROP TABLE IF EXISTS Especificacao CASCADE;

CREATE TABLE Especificacao (
    id_especificacao INT PRIMARY KEY,
    id_peca INT,
    descricao TEXT,
    categoria_tecnica VARCHAR(100),
    valor VARCHAR(100),
    FOREIGN KEY (id_peca) REFERENCES Pecas(id_peca)
);

-- COMPATIBILIDADE
DROP TABLE IF EXISTS Compatibilidade CASCADE;

CREATE TABLE Compatibilidade (
    id_regra INT PRIMARY KEY,
    id_peca_principal INT,
    id_peca_secundaria INT,
    criterio VARCHAR(100),
    mensagem_erro_sucesso TEXT,
    FOREIGN KEY (id_peca_principal) REFERENCES Pecas(id_peca),
    FOREIGN KEY (id_peca_secundaria) REFERENCES Pecas(id_peca)
);

-- MONTAGEMPC
DROP TABLE IF EXISTS MontagemPC CASCADE;

CREATE TABLE MontagemPC (
    id_montagem SERIAL PRIMARY KEY,
    id_cliente INT,
    data_criacao DATE,
    status_compatibilidade BOOLEAN,
    orcamento_estimado DECIMAL(10, 2),
    FOREIGN KEY (id_cliente) REFERENCES Cliente(id_cliente)
);


-- TABELA ASSOCIATIVA MONTAGEM_PECAS (N:M)
DROP TABLE IF EXISTS Montagem_Pecas CASCADE;

CREATE TABLE Montagem_Pecas (
    id_montagem INT,
    id_peca INT,
    quantidade INT DEFAULT 1,
    PRIMARY KEY (id_montagem, id_peca),
    FOREIGN KEY (id_montagem) REFERENCES MontagemPC(id_montagem),
    FOREIGN KEY (id_peca) REFERENCES Pecas(id_peca)
);

-- ORCAMENTO
DROP TABLE IF EXISTS Orcamento CASCADE;

CREATE TABLE Orcamento (
    id_orcamento INT PRIMARY KEY,
    id_montagem INT UNIQUE,
    preco_total DECIMAL(10, 2),
    link_para_lojas VARCHAR(255),
    FOREIGN KEY (id_montagem) REFERENCES MontagemPC(id_montagem)
);

-- RESERVA COMPRA
DROP TABLE IF EXISTS ReservaCompra CASCADE;

CREATE TABLE ReservaCompra (
    id_reserva SERIAL PRIMARY KEY,
    id_cliente INT NOT NULL,
    id_peca INT NOT NULL,
    data DATE NOT NULL,
    status VARCHAR(50) NOT NULL,
    FOREIGN KEY (id_cliente) REFERENCES Cliente(id_cliente),
    FOREIGN KEY (id_peca) REFERENCES Pecas(id_peca)

);
-- FAQ
DROP TABLE IF EXISTS FAQ CASCADE;

CREATE TABLE FAQ (
    id_faq INT PRIMARY KEY,
    titulo VARCHAR(100)
);

-- MENSAGEM FAQ
DROP TABLE IF EXISTS MensagemFAQ CASCADE;

CREATE TABLE MensagemFAQ (
    id_mensagem INT PRIMARY KEY,
    id_cliente INT,
    conteudo TEXT,
    data DATE,
    id_faq INT,
    FOREIGN KEY (id_cliente) REFERENCES Cliente(id_cliente),
    FOREIGN KEY (id_faq) REFERENCES FAQ(id_faq)
);




-- Inserir Clientes
INSERT INTO Cliente (nome, email, senha, cpf)
VALUES
('João Silva', 'joao@gmail.com', 'senha123', '12345678901'),
('Maria Souza', 'maria@gmail.com', 'senha456', '98765432100'),
('Pedro Oliveira', 'pedro@gmail.com', 'senha789', '11122233344');

-- Inserir Lojas Afiliadas
INSERT INTO LojaAfiliada (id_loja, nome, link)
VALUES
(1, 'TechStore', 'https://techstore.com'),
(2, 'PCWorld', 'https://pcworld.com'),
(3, 'MegaPecas', 'https://megapecas.com');

-- Inserir Peças
INSERT INTO Pecas (id_peca, nome_peca, categoria, marca, preco)
VALUES
(1, 'Processador Ryzen 5', 'Processador', 'AMD', 1200.00),
(2, 'Placa-Mãe B450', 'Placa-Mãe', 'ASUS', 650.00),
(3, 'Memória RAM 8GB', 'Memória', 'Corsair', 300.00),
(4, 'SSD 480GB', 'Armazenamento', 'Kingston', 250.00);

-- Inserir Especificações
INSERT INTO Especificacao (id_especificacao, id_peca, descricao, categoria_tecnica, valor)
VALUES
(1, 1, 'Processador com 6 núcleos e 12 threads', 'Clock', '3.6GHz'),
(2, 2, 'Compatível com Ryzen até 3ª Geração', 'Socket', 'AM4'),
(3, 3, 'Memória DDR4 com dissipador', 'Frequência', '3200MHz'),
(4, 4, 'SSD com interface SATA III', 'Velocidade', '500MB/s');

-- Inserir Compatibilidades
INSERT INTO Compatibilidade (id_regra, id_peca_principal, id_peca_secundaria, criterio, mensagem_erro_sucesso)
VALUES
(1, 1, 2, 'Socket', 'Processador e Placa-Mãe compatíveis'),
(2, 2, 3, 'DDR4', 'Placa-Mãe e Memória compatíveis');

-- Inserir Montagens de PC
INSERT INTO MontagemPC (id_montagem, id_cliente, data_criacao, status_compatibilidade, orcamento_estimado)
VALUES
(1, 1, CURRENT_DATE, TRUE, 2400.00),
(2, 2, CURRENT_DATE, TRUE, 1400.00);

-- Inserir Peças nas Montagens
INSERT INTO Montagem_Pecas (id_montagem, id_peca, quantidade)
VALUES
(1, 1, 1),
(1, 2, 1),
(1, 3, 2),
(2, 4, 1);

-- Inserir Orçamentos
INSERT INTO Orcamento (id_orcamento, id_montagem, preco_total, link_para_lojas)
VALUES
(1, 1, 2400.00, 'https://techstore.com/carrinho1'),
(2, 2, 1400.00, 'https://pcworld.com/carrinho2');

-- Inserir Reservas
INSERT INTO ReservaCompra (id_reserva, id_cliente, id_peca, data, status)
VALUES
(1, 1, 1, CURRENT_DATE, 'Reservado'),
(2, 2, 3, CURRENT_DATE, 'Reservado');

-- Inserir FAQ
INSERT INTO FAQ (id_faq, titulo)
VALUES
(1, 'Como montar um PC?'),
(2, 'Quais peças são compatíveis?');

-- Inserir Mensagens FAQ
INSERT INTO MensagemFAQ (id_mensagem, id_cliente, conteudo, data, id_faq)
VALUES
(1, 1, 'Preciso de ajuda com a compatibilidade de RAM.', CURRENT_DATE, 2),
(2, 2, 'Quais peças devo comprar primeiro?', CURRENT_DATE, 1);
